import { z } from 'zod';
export declare const modalitySchema: z.ZodEnum<["text", "image"]>;
export declare const aiConfigurationSchema: z.ZodObject<{
    id: z.ZodString;
    inputModality: z.ZodArray<z.ZodEnum<["text", "image"]>, "many">;
    outputModality: z.ZodArray<z.ZodEnum<["text", "image"]>, "many">;
    provider: z.ZodString;
    modelId: z.ZodString;
    systemPrompt: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    id: string;
    inputModality: ("text" | "image")[];
    outputModality: ("text" | "image")[];
    provider: string;
    modelId: string;
    systemPrompt?: string | undefined;
}, {
    id: string;
    inputModality: ("text" | "image")[];
    outputModality: ("text" | "image")[];
    provider: string;
    modelId: string;
    systemPrompt?: string | undefined;
}>;
export declare const aiConfigurationWithUsageSchema: z.ZodObject<{
    id: z.ZodString;
    inputModality: z.ZodArray<z.ZodEnum<["text", "image"]>, "many">;
    outputModality: z.ZodArray<z.ZodEnum<["text", "image"]>, "many">;
    provider: z.ZodString;
    modelId: z.ZodString;
    systemPrompt: z.ZodOptional<z.ZodString>;
} & {
    usageStats: z.ZodOptional<z.ZodObject<{
        totalInputTokens: z.ZodNumber;
        totalOutputTokens: z.ZodNumber;
        totalTokens: z.ZodNumber;
        totalImageCount: z.ZodNumber;
        totalRequests: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        totalInputTokens: number;
        totalOutputTokens: number;
        totalTokens: number;
        totalImageCount: number;
        totalRequests: number;
    }, {
        totalInputTokens: number;
        totalOutputTokens: number;
        totalTokens: number;
        totalImageCount: number;
        totalRequests: number;
    }>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    inputModality: ("text" | "image")[];
    outputModality: ("text" | "image")[];
    provider: string;
    modelId: string;
    systemPrompt?: string | undefined;
    usageStats?: {
        totalInputTokens: number;
        totalOutputTokens: number;
        totalTokens: number;
        totalImageCount: number;
        totalRequests: number;
    } | undefined;
}, {
    id: string;
    inputModality: ("text" | "image")[];
    outputModality: ("text" | "image")[];
    provider: string;
    modelId: string;
    systemPrompt?: string | undefined;
    usageStats?: {
        totalInputTokens: number;
        totalOutputTokens: number;
        totalTokens: number;
        totalImageCount: number;
        totalRequests: number;
    } | undefined;
}>;
export declare const aiUsageDataSchema: z.ZodObject<{
    configId: z.ZodString;
    inputTokens: z.ZodOptional<z.ZodNumber>;
    outputTokens: z.ZodOptional<z.ZodNumber>;
    imageCount: z.ZodOptional<z.ZodNumber>;
    imageResolution: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    configId: string;
    inputTokens?: number | undefined;
    outputTokens?: number | undefined;
    imageCount?: number | undefined;
    imageResolution?: string | undefined;
}, {
    configId: string;
    inputTokens?: number | undefined;
    outputTokens?: number | undefined;
    imageCount?: number | undefined;
    imageResolution?: string | undefined;
}>;
export declare const aiUsageRecordSchema: z.ZodObject<{
    configId: z.ZodString;
    inputTokens: z.ZodOptional<z.ZodNumber>;
    outputTokens: z.ZodOptional<z.ZodNumber>;
    imageCount: z.ZodOptional<z.ZodNumber>;
    imageResolution: z.ZodOptional<z.ZodString>;
} & {
    id: z.ZodString;
    createdAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    configId: string;
    createdAt: Date;
    inputTokens?: number | undefined;
    outputTokens?: number | undefined;
    imageCount?: number | undefined;
    imageResolution?: string | undefined;
}, {
    id: string;
    configId: string;
    createdAt: Date;
    inputTokens?: number | undefined;
    outputTokens?: number | undefined;
    imageCount?: number | undefined;
    imageResolution?: string | undefined;
}>;
export declare const aiUsageSummarySchema: z.ZodObject<{
    totalInputTokens: z.ZodNumber;
    totalOutputTokens: z.ZodNumber;
    totalTokens: z.ZodNumber;
    totalImageCount: z.ZodNumber;
    totalRequests: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    totalInputTokens: number;
    totalOutputTokens: number;
    totalTokens: number;
    totalImageCount: number;
    totalRequests: number;
}, {
    totalInputTokens: number;
    totalOutputTokens: number;
    totalTokens: number;
    totalImageCount: number;
    totalRequests: number;
}>;
export type ModalitySchema = z.infer<typeof modalitySchema>;
export type AIConfigurationSchema = z.infer<typeof aiConfigurationSchema>;
export type AIConfigurationWithUsageSchema = z.infer<typeof aiConfigurationWithUsageSchema>;
export type AIUsageDataSchema = z.infer<typeof aiUsageDataSchema>;
export type AIUsageRecordSchema = z.infer<typeof aiUsageRecordSchema>;
export type AIUsageSummarySchema = z.infer<typeof aiUsageSummarySchema>;
//# sourceMappingURL=ai.schema.d.ts.map