import { z } from 'zod';
export declare const imageGenerationOptionsSchema: z.ZodObject<{
    model: z.ZodString;
    prompt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    prompt: string;
    model: string;
}, {
    prompt: string;
    model: string;
}>;
export declare const generatedImageSchema: z.ZodObject<{
    url: z.ZodOptional<z.ZodString>;
    imageData: z.ZodOptional<z.ZodString>;
    revisedPrompt: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    url?: string | undefined;
    imageData?: string | undefined;
    revisedPrompt?: string | undefined;
}, {
    url?: string | undefined;
    imageData?: string | undefined;
    revisedPrompt?: string | undefined;
}>;
export declare const openRouterImageMessageSchema: z.ZodObject<{
    type: z.ZodLiteral<"image_url">;
    image_url: z.ZodObject<{
        url: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        url: string;
    }, {
        url: string;
    }>;
}, "strip", z.ZodTypeAny, {
    type: "image_url";
    image_url: {
        url: string;
    };
}, {
    type: "image_url";
    image_url: {
        url: string;
    };
}>;
export declare const imageGenerationResponseSchema: z.ZodObject<{
    text: z.ZodOptional<z.ZodString>;
    images: z.ZodArray<z.ZodObject<{
        type: z.ZodLiteral<"image_url">;
        image_url: z.ZodObject<{
            url: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            url: string;
        }, {
            url: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "image_url";
        image_url: {
            url: string;
        };
    }, {
        type: "image_url";
        image_url: {
            url: string;
        };
    }>, "many">;
    metadata: z.ZodOptional<z.ZodObject<{
        model: z.ZodString;
        revisedPrompt: z.ZodOptional<z.ZodString>;
        usage: z.ZodOptional<z.ZodObject<{
            promptTokens: z.ZodOptional<z.ZodNumber>;
            completionTokens: z.ZodOptional<z.ZodNumber>;
            totalTokens: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            totalTokens?: number | undefined;
            promptTokens?: number | undefined;
            completionTokens?: number | undefined;
        }, {
            totalTokens?: number | undefined;
            promptTokens?: number | undefined;
            completionTokens?: number | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        model: string;
        usage?: {
            totalTokens?: number | undefined;
            promptTokens?: number | undefined;
            completionTokens?: number | undefined;
        } | undefined;
        revisedPrompt?: string | undefined;
    }, {
        model: string;
        usage?: {
            totalTokens?: number | undefined;
            promptTokens?: number | undefined;
            completionTokens?: number | undefined;
        } | undefined;
        revisedPrompt?: string | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    images: {
        type: "image_url";
        image_url: {
            url: string;
        };
    }[];
    text?: string | undefined;
    metadata?: {
        model: string;
        usage?: {
            totalTokens?: number | undefined;
            promptTokens?: number | undefined;
            completionTokens?: number | undefined;
        } | undefined;
        revisedPrompt?: string | undefined;
    } | undefined;
}, {
    images: {
        type: "image_url";
        image_url: {
            url: string;
        };
    }[];
    text?: string | undefined;
    metadata?: {
        model: string;
        usage?: {
            totalTokens?: number | undefined;
            promptTokens?: number | undefined;
            completionTokens?: number | undefined;
        } | undefined;
        revisedPrompt?: string | undefined;
    } | undefined;
}>;
export type ImageGenerationOptions = z.infer<typeof imageGenerationOptionsSchema>;
export type GeneratedImage = z.infer<typeof generatedImageSchema>;
export type OpenRouterImageMessage = z.infer<typeof openRouterImageMessageSchema>;
export type ImageGenerationResponse = z.infer<typeof imageGenerationResponseSchema>;
//# sourceMappingURL=ai-image.schema.d.ts.map